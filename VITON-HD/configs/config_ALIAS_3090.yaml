###########
# Dataset #
###########
data_dir: /data/VITON/datasets/VITON_AIHub/
data_list: train_pairs_original.txt

##############
# Checkpoint #
##############
# used only if continuing training
checkpoint_dir: ./checkpoints
seg_checkpoint: blackened_seg_train/200_net_G.pth
gmm_checkpoint: blackened_gmm_train/200_net_G.pth
alias_checkpoint: blackened_alias_train/200_net_G.pth

####################################################################
# Train
####################################################################

##########
# Common #
##########
batch_size: 1
num_workers: 1
lr: 0.0002
beta1: 0.5 # momentum term of ADAM
load_height: 512
load_width: 512
shuffle: True

semantic_nc: 13 # number of human-parsing map classes
init_type: xavier # normal, xavier, xavier_uniform, kaiming, orthogonal, none
init_variance: 0.02 # variance of the initialization distribution
pool_size: 50 # the size of image buffer that stores previously generated images

niter: 50 # number of iter at starting learning rate
niter_decay: 150 # number of iter to linearly decay learning rate to zero
lr_update: TTUR # LR Update Schedule Mode : TTUR (Two-Timestep Update Rule), Linear, Cosine
save_epoch_freq: 5 # frequency of saving checkpoints at the end of epochs
save_latest_freq: 15000 # frequency of saving the latest results
no_html: False # do not save intermediate training results to [opt.checkpoints_dir]/[opt.name]/web/

##########
# SegGen #
##########
lambda_ce: 10
seg_options: {
    beta1_G: 0.5,
    beta2_G: 0.5,
    beta1_D: 0.999,
    beta2_D: 0.999,
    gan_mode: ls # ls, original, w, hinge
}

##################
# ALIASGenerator #
##################
norm_G: spectralaliasinstance
ngf: 64 # number of generator filters in the first conv layer
num_upsampling_layers: most # normal, more, most.
    # If \'more\', add upsampling layer between the two middle resnet blocks.
    # If \'most\', also add one more (upsampling + resnet) layer at the end of the generator.
lambda_feat: 10
lambda_percept: 10
norm_feat: 128
alias_options: {
    beta1_G: 0,
    beta2_G: 0.9,
    beta1_D: 0,
    beta2_D: 0.9,
    n_conv: 8,
    gan_mode: hinge # ls, original, w, hinge
}

#######
# GMM #
#######
grid_size: 5
lambda_const: 0.04
gmm_options: {
    beta1_G: 0.5,
    beta2_G: 0.999
}

#################
# Discriminator #
#################
ndf: 64 # number of discriminator filters in first conv layer
n_layers_D: 3 # only used if which_model_netD == n_layers
num_D: 2 # number of discriminators to use
lambda_real: 0.5
discriminator_options: {
    kw: 4, # PatchGAN kernel width
    padw: 1 # PatchGAN padding width
}

#############
# Visualize #
#############
tf_log: True # if specified, use tensorboard logging. Requires tensorflow installed.
display_winsize: 512 # display window size
print_freq: 100 # frequency of showing training results on console
display_freq: 10000 # frequency of showing results on console
